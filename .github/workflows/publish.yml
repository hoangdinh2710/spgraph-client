name: Publish Python Package to PyPI

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    name: Build and publish
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine bump-my-version

      - name: Determine version bump
        id: version
        run: |
          COMMITS=$(git log -1 --pretty=%B)
          echo "Last commit message: $COMMITS"

          if echo "$COMMITS" | grep -q "BREAKING CHANGE"; then
            echo "BUMP=major" >> $GITHUB_ENV
          elif echo "$COMMITS" | grep -qE "^feat"; then
            echo "BUMP=minor" >> $GITHUB_ENV
          elif echo "$COMMITS" | grep -qE "^fix"; then
            echo "BUMP=patch" >> $GITHUB_ENV
          else
            echo "No version bump needed"
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Bump version
        if: steps.version.outputs.skip != 'true'
        run: |
          bump-my-version bump $BUMP --message "chore: bump version to {new_version}"

      - name: Show new version
        id: get-version
        run: echo "version=$(bump-my-version show current_version)" >> $GITHUB_OUTPUT

      - name: Commit and tag version
        if: steps.version.outputs.skip != 'true'
        run: |
          VERSION=$(bump-my-version show current_version)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "chore: bump version to $VERSION"
          git tag v$VERSION
          git push origin main --tags

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
