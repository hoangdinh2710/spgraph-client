name: Publish to PyPI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine bump-my-version

      - name: Determine version bump
        run: |
          COMMITS=$(git log --pretty=format:"%s" $(git describe --tags --abbrev=0)..HEAD || git log --pretty=format:"%s")
          echo "$COMMITS"

          if echo "$COMMITS" | grep -q "BREAKING CHANGE"; then
            echo "BUMP=major" >> $GITHUB_ENV
          elif echo "$COMMITS" | grep -qE "^feat"; then
            echo "BUMP=minor" >> $GITHUB_ENV
          elif echo "$COMMITS" | grep -qE "^fix"; then
            echo "BUMP=patch" >> $GITHUB_ENV
          else
            echo "No version bump needed"
            exit 0
          fi

      - name: Bump version
        run: bump-my-version bump $BUMP --message "chore: bump version"

      - name: Commit version bump and tag
        run: |
          VERSION=$(bump-my-version show current_version)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "chore: bump version to $VERSION" || echo "No changes to commit"
          git tag v$VERSION
          git push origin main --tags

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
